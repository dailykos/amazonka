name:                  amazonka-appmesh
version:               1.6.1
synopsis:              Amazon App Mesh SDK.
homepage:              https://github.com/brendanhay/amazonka
bug-reports:           https://github.com/brendanhay/amazonka/issues
license:               MPL-2.0
license-file:          LICENSE
author:                Brendan Hay
maintainer:            Brendan Hay <brendan.g.hay+amazonka@gmail.com>
copyright:             Copyright (c) 2013-2018 Brendan Hay
category:              Network, AWS, Cloud, Distributed Computing
build-type:            Simple
cabal-version:         >= 1.10
extra-source-files:    README.md fixture/*.yaml fixture/*.proto src/.gitkeep
description:
    The types from this library are intended to be used with
    <http://hackage.haskell.org/package/amazonka amazonka>, which provides
    mechanisms for specifying AuthN/AuthZ information, sending requests,
    and receiving responses.
    .
    Lenses are used for constructing and manipulating types,
    due to the depth of nesting of AWS types and transparency regarding
    de/serialisation into more palatable Haskell values.
    The provided lenses should be compatible with any of the major lens libraries
    such as <http://hackage.haskell.org/package/lens lens> or
    <http://hackage.haskell.org/package/lens-family-core lens-family-core>.
    .
    See "Network.AWS.AppMesh" or <https://aws.amazon.com/documentation/ the AWS documentation>
    to get started.

source-repository head
    type:              git
    location:          git://github.com/brendanhay/amazonka.git
    subdir:            amazonka-appmesh

library
    default-language:  Haskell2010
    hs-source-dirs:    src gen

    ghc-options:
        -Wall
        -fwarn-incomplete-uni-patterns
        -fwarn-incomplete-record-updates
        -funbox-strict-fields

    exposed-modules:
          Network.AWS.AppMesh
        , Network.AWS.AppMesh.CreateMesh
        , Network.AWS.AppMesh.CreateRoute
        , Network.AWS.AppMesh.CreateVirtualNode
        , Network.AWS.AppMesh.CreateVirtualRouter
        , Network.AWS.AppMesh.DeleteMesh
        , Network.AWS.AppMesh.DeleteRoute
        , Network.AWS.AppMesh.DeleteVirtualNode
        , Network.AWS.AppMesh.DeleteVirtualRouter
        , Network.AWS.AppMesh.DescribeMesh
        , Network.AWS.AppMesh.DescribeRoute
        , Network.AWS.AppMesh.DescribeVirtualNode
        , Network.AWS.AppMesh.DescribeVirtualRouter
        , Network.AWS.AppMesh.ListMeshes
        , Network.AWS.AppMesh.ListRoutes
        , Network.AWS.AppMesh.ListVirtualNodes
        , Network.AWS.AppMesh.ListVirtualRouters
        , Network.AWS.AppMesh.Types
        , Network.AWS.AppMesh.UpdateRoute
        , Network.AWS.AppMesh.UpdateVirtualNode
        , Network.AWS.AppMesh.UpdateVirtualRouter
        , Network.AWS.AppMesh.Waiters

    other-modules:
          Network.AWS.AppMesh.Internal
        , Network.AWS.AppMesh.Types.Product
        , Network.AWS.AppMesh.Types.Sum

    build-depends:
          amazonka-core == 1.6.1.*
        , base          >= 4.7     && < 5

test-suite amazonka-appmesh-test
    type:              exitcode-stdio-1.0
    default-language:  Haskell2010
    hs-source-dirs:    test
    main-is:           Main.hs

    ghc-options:       -Wall -threaded

    -- This section is encoded by the template and any modules added by
    -- hand outside these namespaces will not correctly be added to the
    -- distribution package.
    other-modules:
          Test.AWS.AppMesh
        , Test.AWS.Gen.AppMesh
        , Test.AWS.AppMesh.Internal

    build-depends:
          amazonka-core == 1.6.1.*
        , amazonka-test == 1.6.1.*
        , amazonka-appmesh
        , base
        , bytestring
        , tasty
        , tasty-hunit
        , text
        , time
        , unordered-containers
